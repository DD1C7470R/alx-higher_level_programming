==16324== Memcheck, a memory error detector
==16324== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16324== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==16324== Command: ./test
==16324== Parent PID: 16232
==16324== 
--16324-- 
--16324-- Valgrind options:
--16324--    --leak-check=full
--16324--    --show-leak-kinds=all
--16324--    --track-origins=yes
--16324--    --verbose
--16324--    --log-file=valgrind-out.txt
--16324-- Contents of /proc/version:
--16324--   Linux version 5.3.0-1032-aws (buildd@lgw01-amd64-026) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #34~18.04.2-Ubuntu SMP Fri Jul 24 10:06:28 UTC 2020
--16324-- 
--16324-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--16324-- Page sizes: currently 4096, max supported 4096
--16324-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--16324-- Reading syms from /root/alx-higher_level_programming/0x00-python-hello_world/test
--16324-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--16324--   Considering /usr/lib/x86_64-linux-gnu/ld-2.31.so ..
--16324--   .. CRC mismatch (computed 0306b78c wanted 8d362b37)
--16324--   Considering /lib/x86_64-linux-gnu/ld-2.31.so ..
--16324--   .. CRC mismatch (computed 0306b78c wanted 8d362b37)
--16324--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.31.so ..
--16324--   .. CRC is valid
--16324-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--16324--    object doesn't have a symbol table
--16324--    object doesn't have a dynamic symbol table
--16324-- Scheduler: using generic scheduler lock implementation.
--16324-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==16324== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16324-by-???-on-151f6ab8d40d
==16324== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16324-by-???-on-151f6ab8d40d
==16324== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16324-by-???-on-151f6ab8d40d
==16324== 
==16324== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16324== don't want to do, unless you know exactly what you're doing,
==16324== or are doing some strange experiment):
==16324==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=16324 ...command...
==16324== 
==16324== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16324==   /path/to/gdb ./test
==16324== and then give GDB the following command
==16324==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=16324
==16324== --pid is optional if only one valgrind process is running
==16324== 
--16324-- REDIR: 0x4022e10 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--16324-- REDIR: 0x4022be0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--16324-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--16324--    object doesn't have a symbol table
--16324-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--16324--    object doesn't have a symbol table
==16324== WARNING: new redirection conflicts with existing -- ignoring it
--16324--     old: 0x04022e10 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--16324--     new: 0x04022e10 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--16324-- REDIR: 0x401f5f0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--16324-- REDIR: 0x4023370 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--16324-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--16324--   Considering /usr/lib/x86_64-linux-gnu/libc-2.31.so ..
--16324--   .. CRC mismatch (computed ef41b1a0 wanted f854b801)
--16324--   Considering /lib/x86_64-linux-gnu/libc-2.31.so ..
--16324--   .. CRC mismatch (computed ef41b1a0 wanted f854b801)
--16324--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so ..
--16324--   .. CRC is valid
--16324-- REDIR: 0x48f44b0 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f37b0 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f47e0 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f30d0 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3810 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f5c80 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4910d10 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4910850 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4610 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4440 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3740 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3180 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4570 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4910810 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f36a0 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3260 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4830 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3200 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4980 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4911f80 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4910890 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3850 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3130 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3660 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48fcbd0 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4880 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4400 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x4910960 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f3b10 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4780 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f4720 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f5cc0 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x48f48d0 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--16324-- REDIR: 0x49dc410 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--16324-- REDIR: 0x48ee110 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
--16324-- REDIR: 0x49dc220 (libc.so.6:__strchrnul_avx2) redirected to 0x4843540 (strchrnul)
--16324-- REDIR: 0x49df5d0 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4843660 (mempcpy)
==16324== Invalid read of size 8
==16324==    at 0x109238: check_cycle (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093F5: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==16324== 
==16324== 
==16324== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==16324==  Access not within mapped region at address 0x8
==16324==    at 0x109238: check_cycle (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093F5: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==  If you believe this happened as a result of a stack
==16324==  overflow in your program's main thread (unlikely but
==16324==  possible), you can try to increase the size of the
==16324==  main thread stack using the --main-stacksize= flag.
==16324==  The main thread stack size used in this run was 8388608.
--16324-- REDIR: 0x48ee700 (libc.so.6:free) redirected to 0x483c9d0 (free)
==16324== 
==16324== HEAP SUMMARY:
==16324==     in use at exit: 128 bytes in 8 blocks
==16324==   total heap usage: 9 allocs, 1 frees, 1,152 bytes allocated
==16324== 
==16324== Searching for pointers to 8 not-freed blocks
==16324== Checked 68,560 bytes
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 1 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x109366: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 2 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x109377: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 3 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x109388: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 4 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x109399: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 5 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093AA: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 6 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093BB: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 7 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093CC: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== 16 bytes in 1 blocks are still reachable in loss record 8 of 8
==16324==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==16324==    by 0x1092BA: add_nodeint (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093DD: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324== 
==16324== LEAK SUMMARY:
==16324==    definitely lost: 0 bytes in 0 blocks
==16324==    indirectly lost: 0 bytes in 0 blocks
==16324==      possibly lost: 0 bytes in 0 blocks
==16324==    still reachable: 128 bytes in 8 blocks
==16324==         suppressed: 0 bytes in 0 blocks
==16324== 
==16324== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==16324== 
==16324== 1 errors in context 1 of 1:
==16324== Invalid read of size 8
==16324==    at 0x109238: check_cycle (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==    by 0x1093F5: main (in /root/alx-higher_level_programming/0x00-python-hello_world/test)
==16324==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==16324== 
==16324== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
